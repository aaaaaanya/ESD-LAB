


ARM Macro Assembler    Page 1 


    1 00000000         ;Write an assembly program to do bubble sort
    2 00000000                 AREA             RESET,DATA,READONLY
    3 00000000                 EXPORT           __Vectors
    4 00000000         
    5 00000000         __Vectors
    6 00000000 10001000        DCD              0X10001000
    7 00000004 00000000        DCD              Reset_Handler
    8 00000008         
    9 00000008                 ALIGN
   10 00000008                 AREA             mycode,CODE,READONLY
   11 00000000                 ENTRY
   12 00000000                 EXPORT           Reset_Handler
   13 00000000         
   14 00000000         Reset_Handler
   15 00000000 491F            LDR              R1,=N
   16 00000002 4820            LDR              R0,=DST
   17 00000004 4602            MOV              R2,R0       ;R2 HAS R0
   18 00000006 F04F 030A       MOV              R3,#10
   19 0000000A         ;code to data
   20 0000000A         BACK
   21 0000000A F851 4B04       LDR              R4,[R1],#4
   22 0000000E F842 4B04       STR              R4,[R2],#4
   23 00000012 3B01            SUBS             R3,#1
   24 00000014 2B00            CMP              R3,#0
   25 00000016 D1F8            BNE              BACK
   26 00000018         ;R0 has start of array
   27 00000018         ;reuse
   28 00000018 F04F 0100       MOV              R1,#0
   29 0000001C F04F 0200       MOV              R2,#0
   30 00000020 F04F 0300       MOV              R3,#0
   31 00000024 F04F 0400       MOV              R4,#0
   32 00000028         
   33 00000028         
   34 00000028 4605            MOV              R5,R0
   35 0000002A F04F 010A       MOV              R1,#10
   36 0000002E         
   37 0000002E         OUTER
   38 0000002E F1A1 0101       SUB              R1,#1
   39 00000032 2900            CMP              R1,#0
   40 00000034 D00E            BEQ              STOP
   41 00000036 4628            MOV              R0,R5
   42 00000038         ;lets make r6 have number of iterations inside
   43 00000038 460E            MOV              R6,R1
   44 0000003A         
   45 0000003A 6802    INNER   LDR              R2,[R0]     ;j
   46 0000003C 6843            LDR              R3,[R0,#4]  ;j+1
   47 0000003E 429A            CMP              R2,R3
   48 00000040         ;IF HI THEN SWAP
   49 00000040         ;MOVHI R4,R2 ;R4 IS TEMP BUFFER
   50 00000040 BF84 6003       STRHI            R3,[R0]
   51 00000044 6042            STRHI            R2,[R0,#4]
   52 00000046 F100 0004       ADD              R0,#4
   53 0000004A F1A6 0601       SUB              R6,#1
   54 0000004E 2E00            CMP              R6,#0
   55 00000050 D1F3            BNE              INNER
   56 00000052 E7EC            B                OUTER
   57 00000054         
   58 00000054         
   59 00000054         



ARM Macro Assembler    Page 2 


   60 00000054         
   61 00000054         
   62 00000054         
   63 00000054 E7FE    STOP    B                STOP
   64 00000056         
   65 00000056 00 00 00000005 
              00000006 
              00000007 
              00000002 
              00000012 
              00000048 
              0000001E 
              00000003 
              0000000C 
              00000001 N       DCD              5,6,7,2,18,72,30,3,12,1
   66 00000080         
   67 00000080 00000000 
              00000000         AREA             mydata,DATA,READWRITE
   68 00000000 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 DST     DCD              0,0,0,0,0,0,0,0,0,0
   69 00000028                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=rough_fi
le.d -orough_file.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Kei
l\ARM\Inc\NXP\LPC17xx --predefine="__EVAL SETA 1" --list=rough_file.lst rough_f
ile.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 2 in file rough_file.asm
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 5 in file rough_file.asm
   Uses
      At line 3 in file rough_file.asm
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BACK 0000000A

Symbol: BACK
   Definitions
      At line 20 in file rough_file.asm
   Uses
      At line 25 in file rough_file.asm
Comment: BACK used once
INNER 0000003A

Symbol: INNER
   Definitions
      At line 45 in file rough_file.asm
   Uses
      At line 55 in file rough_file.asm
Comment: INNER used once
N 00000058

Symbol: N
   Definitions
      At line 65 in file rough_file.asm
   Uses
      At line 15 in file rough_file.asm
Comment: N used once
OUTER 0000002E

Symbol: OUTER
   Definitions
      At line 37 in file rough_file.asm
   Uses
      At line 56 in file rough_file.asm
Comment: OUTER used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 14 in file rough_file.asm
   Uses
      At line 7 in file rough_file.asm
      At line 12 in file rough_file.asm

STOP 00000054

Symbol: STOP
   Definitions
      At line 63 in file rough_file.asm
   Uses
      At line 40 in file rough_file.asm
      At line 63 in file rough_file.asm

mycode 00000000

Symbol: mycode
   Definitions
      At line 10 in file rough_file.asm
   Uses
      None
Comment: mycode unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DST 00000000

Symbol: DST
   Definitions
      At line 68 in file rough_file.asm
   Uses
      At line 16 in file rough_file.asm
Comment: DST used once
mydata 00000000

Symbol: mydata
   Definitions
      At line 67 in file rough_file.asm
   Uses
      None
Comment: mydata unused
2 symbols
344 symbols in table
