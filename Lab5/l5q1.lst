


ARM Macro Assembler    Page 1 


    1 00000000         ;Write an assembly program to sort an array using select
                       ion sort
    2 00000000                 AREA             RESET, DATA, READONLY
    3 00000000                 EXPORT           __Vectors
    4 00000000                 EXPORT           Reset_Handler
    5 00000000         
    6 00000000         __Vectors
    7 00000000 10001000        DCD              0x10001000
    8 00000004 00000000        DCD              Reset_Handler
    9 00000008         
   10 00000008                 ALIGN
   11 00000008         
   12 00000008                 AREA             mycode, CODE, READONLY
   13 00000000                 ENTRY
   14 00000000         
   15 00000000         
   16 00000000         Reset_Handler
   17 00000000         
   18 00000000 F04F 030A       MOV              R3,#10
   19 00000004 4824            LDR              R0,=N
   20 00000006 4925            LDR              R1,=RESULT
   21 00000008 460C            MOV              R4,R1
   22 0000000A         
   23 0000000A         
   24 0000000A         ;code to data memory
   25 0000000A         BACK
   26 0000000A F850 2B04       LDR              R2,[R0],#4
   27 0000000E F841 2B04       STR              R2,[R1],#4
   28 00000012 F1A3 0301       SUB              R3,#1
   29 00000016 2B00            CMP              R3,#0
   30 00000018 D1F7            BNE              BACK
   31 0000001A         
   32 0000001A         ;R4 has address of 1st element in data memory
   33 0000001A         ; can reuse R0,R1,R2,R3
   34 0000001A         ;R3 BECAME 0
   35 0000001A         ;MAKE REST 0 TO REUSE
   36 0000001A F04F 0000       MOV              R0,#0
   37 0000001E F04F 0100       MOV              R1,#0
   38 00000022 F04F 0200       MOV              R2,#0
   39 00000026         
   40 00000026         OUTER
   41 00000026         
   42 00000026         
   43 00000026 6820            LDR              R0,[R4]
   44 00000028 4602            MOV              R2,R0       ;r2 will hold initi
                                                            al value
   45 0000002A 46A2            MOV              R10,R4      ;r10 will hold init
                                                            ial address
   46 0000002C F104 0404       ADD              R4,#4       ;to increment
   47 00000030         
   48 00000030 F103 0301       ADD              R3,#1       ;R3 HAS COUNT FOR I
                                                            TERATIONS
   49 00000034         
   50 00000034 2B0A            CMP              R3,#10
   51 00000036 D019            BEQ              STOP
   52 00000038         
   53 00000038 F1C3 050A       RSB              R5,R3,#10   ;no. of elements to
                                                             compare to
   54 0000003C F04F 0600       MOV              R6,#0



ARM Macro Assembler    Page 2 


   55 00000040 F04F 0700       MOV              R7,#0       ;WILL HOLD ADDRESS 
                                                            OF MIN ELEMENT
   56 00000044         
   57 00000044         INNER
   58 00000044 59A1            LDR              R1,[R4,R6]  ;R1 WILL HAVE THE E
                                                            LEMENTS TO COMPARE
   59 00000046 F106 0604       ADD              R6,#4       ;ADD+4 AFTER EVERY 
                                                            ADDRESS
   60 0000004A 4288            CMP              R0,R1
   61 0000004C BF84 4608       MOVHI            R0,R1       ;MOVE R1 ELEMENT IN
                                                            TO R0 IF R0>R1
   62 00000050 EB0A 0706       ADDHI            R7,R10,R6   ; TO GET ADDRESS OF
                                                             MIN ELEMENT
   63 00000054 F1A5 0501       SUB              R5,#1
   64 00000058 2D00            CMP              R5,#0
   65 0000005A         
   66 0000005A         ;IF MINIMUM IS FOUND WE HAVE TO SWAP MIN ELEMENT R0(AT R
                       7=R10+R6) ADDRESS AND INITIAL ELEMENT R8  (AT R2)
   67 0000005A BF01 4681       MOVEQ            R9,R0       ;R9 ACTS AS TEMP AN
                                                            D STORES THE MIN VA
                                                            LUE 
   68 0000005E 4690            MOVEQ            R8,R2       ;gets initial eleme
                                                            nt
   69 00000060         
   70 00000060 F8C7 8000       STREQ            R8,[R7]     ;moveinitial elemen
                                                            t to min element pl
                                                            ace
   71 00000064 F8CA 9000       STREQ            R9,[R10]    ;move min element t
                                                            o initial element w
                                                            ala place
   72 00000068         
   73 00000068 D0DD            BEQ              OUTER
   74 0000006A E7EB            B                INNER
   75 0000006C         
   76 0000006C         
   77 0000006C         
   78 0000006C E7FE    STOP    B                STOP
   79 0000006E         
   80 0000006E         
   81 0000006E 00 00 00000005 
              00000006 
              00000007 
              00000002 
              00000012 
              00000048 
              0000001E 
              00000003 
              0000000C 
              00000001 N       DCD              5,6,7,2,18,72,30,3,12,1
   82 00000098         
   83 00000098 00000000 
              00000000         AREA             mydata,DATA,READWRITE
   84 00000000 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 3 


              00000000 
              00000000 
              00000000 RESULT  DCD              0,0,0,0,0,0,0,0,0,0
   85 00000028                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=l5q1.d -
ol5q1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NX
P\LPC17xx --predefine="__EVAL SETA 1" --list=l5q1.lst l5q1.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 2 in file l5q1.asm
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 6 in file l5q1.asm
   Uses
      At line 3 in file l5q1.asm
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BACK 0000000A

Symbol: BACK
   Definitions
      At line 25 in file l5q1.asm
   Uses
      At line 30 in file l5q1.asm
Comment: BACK used once
INNER 00000044

Symbol: INNER
   Definitions
      At line 57 in file l5q1.asm
   Uses
      At line 74 in file l5q1.asm
Comment: INNER used once
N 00000070

Symbol: N
   Definitions
      At line 81 in file l5q1.asm
   Uses
      At line 19 in file l5q1.asm
Comment: N used once
OUTER 00000026

Symbol: OUTER
   Definitions
      At line 40 in file l5q1.asm
   Uses
      At line 73 in file l5q1.asm
Comment: OUTER used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 16 in file l5q1.asm
   Uses
      At line 4 in file l5q1.asm
      At line 8 in file l5q1.asm

STOP 0000006C

Symbol: STOP
   Definitions
      At line 78 in file l5q1.asm
   Uses
      At line 51 in file l5q1.asm
      At line 78 in file l5q1.asm

mycode 00000000

Symbol: mycode
   Definitions
      At line 12 in file l5q1.asm
   Uses
      None
Comment: mycode unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESULT 00000000

Symbol: RESULT
   Definitions
      At line 84 in file l5q1.asm
   Uses
      At line 20 in file l5q1.asm
Comment: RESULT used once
mydata 00000000

Symbol: mydata
   Definitions
      At line 83 in file l5q1.asm
   Uses
      None
Comment: mydata unused
2 symbols
344 symbols in table
