


ARM Macro Assembler    Page 1 


    1 00000000         ;1)Write an assembly language program to copy an array o
                       f two 32-bit numbers from code memory to data memory
    2 00000000                 AREA             RESET, DATA, READONLY
    3 00000000                 EXPORT           __Vectors
    4 00000000         
    5 00000000         __Vectors
    6 00000000 10001000        DCD              0x10001000
    7 00000004 00000000        DCD              Reset_Handler
    8 00000008         
    9 00000008                 ALIGN
   10 00000008                 AREA             mycode, CODE, READONLY
   11 00000000                 ENTRY
   12 00000000                 EXPORT           Reset_Handler
   13 00000000         
   14 00000000         Reset_Handler
   15 00000000         ;LDR R0,=N
   16 00000000         ;LDR R1,[R0]
   17 00000000         ;LDR R2,=0xA1243140
   18 00000000         
   19 00000000         ;Copying an array of values from one variable to another
                       ,Q1
   20 00000000         ;LDR R0,=N
   21 00000000         ;LDR R1,=DST
   22 00000000         ;LDR R2,[R0]
   23 00000000         ;STR R2,[R1]
   24 00000000         ;ADD R0,#0x00000004
   25 00000000         ;ADD R1,#0x00000004
   26 00000000         ;LDR R2, [R0]
   27 00000000         ;STR R2,[R1]
   28 00000000         
   29 00000000         ;Copying an array of values from one variable to another
                       ,Q1, 2nd method
   30 00000000         ;LDR R0,=N
   31 00000000         ;LDR R1,=DST
   32 00000000         ;LDR R2,[R0],#4
   33 00000000         ;STR R2,[R1],#4
   34 00000000         ;LDR R2, [R0]
   35 00000000         ;STR R2,[R1]
   36 00000000         
   37 00000000         ;Copying an array of values from one variable to another
                       ,Q1, 3rd method using loop
   38 00000000 F04F 0305       MOV              R3,#5
   39 00000004 480A            LDR              R0,=N
   40 00000006 490B            LDR              R1,=DST
   41 00000008         BACK
   42 00000008 F850 2B04       LDR              R2,[R0],#4
   43 0000000C F841 2B04       STR              R2,[R1],#4
   44 00000010 F1A3 0301       SUB              R3,#1       ;Subtracts the valu
                                                            e of R3 by a by val
                                                            ue of 1
   45 00000014 2B00            CMP              R3,#0       ;Keeps comparing th
                                                            e value of R3 with 
                                                            0
   46 00000016 D1F7            BNE              BACK        ;BNE--> Branch when
                                                             Not equal, so it b
                                                            reaks if R3 becomes
                                                             equal to 0,as long
                                                             as not equal it ke
                                                            eps looping, the lo



ARM Macro Assembler    Page 2 


                                                            op breaks when Z fl
                                                            ag becomes 1 from 0
                                                            , the Z flag can be
                                                             seen under xPSR
   47 00000018         ;BEQ--> Branch when equal
   48 00000018         
   49 00000018         STOP
   50 00000018 E7FE            B                STOP
   51 0000001A         
   52 0000001A 00 00 12345678 
              0000006A 
              00000234 
              0000049C 
              000A13BC N       DCD              0x12345678,0x6A,0x234,0x49C,0xA
13BC
   53 00000030         
   54 00000030 00000000 
              00000000         AREA             mydata, DATA, READWRITE
   55 00000000 00000000 
              00000000 
              00000000 
              00000000 
              00000000 DST     DCD              0,0,0,0,0   ;Remember to alloca
                                                            te enough space to 
                                                            reserve the memory,
                                                             if not allocated p
                                                            roperly values may 
                                                            be overwritten 
   56 00000014         
   57 00000014                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=l2q1.d -
ol2q1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NX
P\LPC17xx --predefine="__EVAL SETA 1" --list=l2q1.lst l2q1.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 2 in file l2q1.asm
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 5 in file l2q1.asm
   Uses
      At line 3 in file l2q1.asm
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BACK 00000008

Symbol: BACK
   Definitions
      At line 41 in file l2q1.asm
   Uses
      At line 46 in file l2q1.asm
Comment: BACK used once
N 0000001C

Symbol: N
   Definitions
      At line 52 in file l2q1.asm
   Uses
      At line 39 in file l2q1.asm
Comment: N used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 14 in file l2q1.asm
   Uses
      At line 7 in file l2q1.asm
      At line 12 in file l2q1.asm

STOP 00000018

Symbol: STOP
   Definitions
      At line 49 in file l2q1.asm
   Uses
      At line 50 in file l2q1.asm
Comment: STOP used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 10 in file l2q1.asm
   Uses
      None
Comment: mycode unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DST 00000000

Symbol: DST
   Definitions
      At line 55 in file l2q1.asm
   Uses
      At line 40 in file l2q1.asm
Comment: DST used once
mydata 00000000

Symbol: mydata
   Definitions
      At line 54 in file l2q1.asm
   Uses
      None
Comment: mydata unused
2 symbols
342 symbols in table
