


ARM Macro Assembler    Page 1 


    1 00000000         ;Write a program to add ten 32 bit numbers stored in cod
                       e segment and store the result in data segment
    2 00000000                 AREA             RESET,DATA,READONLY
    3 00000000                 EXPORT           __Vectors
    4 00000000         
    5 00000000         __Vectors
    6 00000000 10001000        DCD              0X10001000
    7 00000004 00000000        DCD              Reset_Handler
    8 00000008         
    9 00000008                 ALIGN
   10 00000008                 AREA             mycode, CODE, READONLY
   11 00000000                 ENTRY
   12 00000000                 EXPORT           Reset_Handler
   13 00000000         
   14 00000000         Reset_Handler
   15 00000000 F04F 0004       MOV              R0,#4
   16 00000004 4910            LDR              R1,=N
   17 00000006 4D11            LDR              R5,=SUM
   18 00000008         ; FOR SUM STORE IN R2 AND CARRY R3
   19 00000008         
   20 00000008 F851 4B04 
                       BACK    LDR              R4,[R1],#4
   21 0000000C 1912            ADDS             R2,R4
   22 0000000E F143 0300       ADC              R3,#0
   23 00000012 3801            SUBS             R0,#1
   24 00000014 D1F8            BNE              BACK
   25 00000016         
   26 00000016 F845 2B04       STR              R2,[R5],#4
   27 0000001A 602B            STR              R3,[R5]
   28 0000001C         
   29 0000001C         STOP
   30 0000001C E7FE            B                STOP
   31 0000001E         
   32 0000001E         ;N DCD 0x12345678,0x6A,0x234,0x49C,0xA13BC,0x69,0xA666,0
                       x227799,0x98243231,0x01
   33 0000001E 00 00 00000001 
              00000002 
              00000003 
              00000004 
              00000005 
              00000006 
              00000007 
              00000008 
              00000009 
              0000000A N       DCD              1,2,3,4,5,6,7,8,9,10
   34 00000048 00000000 
              00000000         AREA             mydata,DATA,READWRITE
   35 00000000 00000000 
              00000000 
              00000000 SUM     DCD              0,0,0
   36 0000000C                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=l3q1.d -
ol3q1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NX
P\LPC17xx --predefine="__EVAL SETA 1" --list=l3q1.lst l3q1.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 2 in file l3q1.asm
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 5 in file l3q1.asm
   Uses
      At line 3 in file l3q1.asm
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BACK 00000008

Symbol: BACK
   Definitions
      At line 20 in file l3q1.asm
   Uses
      At line 24 in file l3q1.asm
Comment: BACK used once
N 00000020

Symbol: N
   Definitions
      At line 33 in file l3q1.asm
   Uses
      At line 16 in file l3q1.asm
Comment: N used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 14 in file l3q1.asm
   Uses
      At line 7 in file l3q1.asm
      At line 12 in file l3q1.asm

STOP 0000001C

Symbol: STOP
   Definitions
      At line 29 in file l3q1.asm
   Uses
      At line 30 in file l3q1.asm
Comment: STOP used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 10 in file l3q1.asm
   Uses
      None
Comment: mycode unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SUM 00000000

Symbol: SUM
   Definitions
      At line 35 in file l3q1.asm
   Uses
      At line 17 in file l3q1.asm
Comment: SUM used once
mydata 00000000

Symbol: mydata
   Definitions
      At line 34 in file l3q1.asm
   Uses
      None
Comment: mydata unused
2 symbols
342 symbols in table
